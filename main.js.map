{"version":3,"file":"main.js","mappings":";;;;AAAe,SAASA,uBAAuBA,CAACC,UAAU,EAAE;EACxD,MAAMC,aAAa,GAAGD,UAAU,CAACE,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC;EAEnD,IAAI,CAAC,OAAO,CAACC,IAAI,CAACF,aAAa,CAAC,EAAE;IAC9B,OAAO,KAAK;EAChB;EAEA,MAAMG,MAAM,GAAGH,aAAa,CAACI,KAAK,CAAC,EAAE,CAAC,CAACC,OAAO,CAAC,CAAC;EAChD,IAAIC,GAAG,GAAG,CAAC;EAEX,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGJ,MAAM,CAACK,MAAM,EAAED,CAAC,EAAE,EAAE;IACpC,IAAIE,KAAK,GAAG,CAACN,MAAM,CAACI,CAAC,CAAC;IAEtB,IAAIA,CAAC,GAAG,CAAC,EAAE;MACPE,KAAK,IAAI,CAAC;MAEV,IAAIA,KAAK,GAAG,CAAC,EAAE;QACXA,KAAK,IAAI,CAAC;MACd;IACJ;IAAC;IAEDH,GAAG,IAAIG,KAAK;EAChB;EAEA,OAAQH,GAAG,GAAG,EAAE,KAAK,CAAC;AAC1B;;ACzBe,SAASI,WAAWA,CAACX,UAAU,EAAE;EAC5C,MAAMY,iBAAiB,GAAGZ,UAAU,CAACE,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC;EAEvD,IAAI,IAAI,CAACC,IAAI,CAACS,iBAAiB,CAAC,EAAE;IAC9B,OAAO,MAAM;EACjB,CAAC,MAAM,IAAI,SAAS,CAACT,IAAI,CAACS,iBAAiB,CAAC,EAAE;IAC1C,OAAO,QAAQ;EACnB,CAAC,MAAM,IAAI,QAAQ,CAACT,IAAI,CAACS,iBAAiB,CAAC,EAAE;IACzC,OAAO,MAAM;EACjB,CAAC,MAAM,IAAI,aAAa,CAACT,IAAI,CAACS,iBAAiB,CAAC,EAAE;IAC9C,OAAO,UAAU;EACrB,CAAC,MAAM,IAAI,uBAAuB,CAACT,IAAI,CAACS,iBAAiB,CAAC,EAAE;IACxD,OAAO,KAAK;EAChB,CAAC,MAAM,IAAI,WAAW,CAACT,IAAI,CAACS,iBAAiB,CAAC,IAAI,SAAS,CAACT,IAAI,CAACS,iBAAiB,CAAC,EAAE;IACjF,OAAO,KAAK;EAChB,CAAC,MAAM;IACH,OAAO,SAAS;EACpB;AACJ;;AClBgE;AACxB;AAExCC,QAAQ,CAACC,aAAa,CAAC,mBAAmB,CAAC,CAACC,gBAAgB,CAAC,QAAQ,EAAEC,CAAC,IAAI;EACxEA,CAAC,CAACC,cAAc,CAAC,CAAC;EAElB,MAAMjB,UAAU,GAAGa,QAAQ,CAACC,aAAa,CAAC,oBAAoB,CAAC,CAACI,KAAK;EACrE,MAAMC,aAAa,GAAGN,QAAQ,CAACC,aAAa,CAAC,SAAS,CAAC;EAEvD,IAAIf,uBAAuB,CAACC,UAAU,CAAC,EAAE;IACrC,MAAMoB,QAAQ,GAAGT,WAAW,CAACX,UAAU,CAAC;IACxCmB,aAAa,CAACE,WAAW,GAAG,kDAAkDD,QAAQ,EAAE;IACxFD,aAAa,CAACG,SAAS,GAAG,UAAUF,QAAQ,EAAE;IAE9CP,QAAQ,CAACU,gBAAgB,CAAC,OAAO,CAAC,CAACC,OAAO,CAACC,IAAI,IAAI;MAC/CA,IAAI,CAACC,SAAS,CAACC,MAAM,CAAC,UAAU,CAAC;IACrC,CAAC,CAAC;IAEF,IAAIP,QAAQ,KAAK,SAAS,EAAE;MACxBP,QAAQ,CAACC,aAAa,CAAC,SAASM,QAAQ,EAAE,CAAC,CAACM,SAAS,CAACE,GAAG,CAAC,UAAU,CAAC;IACzE;EACJ,CAAC,MAAM;IACHT,aAAa,CAACE,WAAW,GAAG,mBAAmB;EACnD;AACJ,CAAC,CAAC;;ACxBuB","sources":["webpack://tests-credit-card-validator/./src/js/isValidCreditCardNumber.js","webpack://tests-credit-card-validator/./src/js/getCardType.js","webpack://tests-credit-card-validator/./src/js/app.js","webpack://tests-credit-card-validator/./src/index.js"],"sourcesContent":["export default function isValidCreditCardNumber(cardNumber) {\n    const cleanedNumber = cardNumber.replace(/\\D/g, '');\n    \n    if (!/^\\d+$/.test(cleanedNumber)) {\n        return false; \n    }\n\n    const digits = cleanedNumber.split('').reverse();\n    let sum = 0;\n\n    for (let i = 0; i < digits.length; i++) {\n        let digit = +digits[i];\n\n        if (i % 2) {\n            digit *= 2;\n\n            if (digit > 9) {\n                digit -= 9;\n            }\n        };\n\n        sum += digit;\n    }\n\n    return (sum % 10 === 0);\n}","export default function getCardType(cardNumber) {\n    const cardNumberCleaned = cardNumber.replace(/\\D/g, '');\n\n    if (/^4/.test(cardNumberCleaned)) {\n        return 'visa';\n    } else if (/^5[1-5]/.test(cardNumberCleaned)) {\n        return 'master';\n    } else if (/^3[47]/.test(cardNumberCleaned)) {\n        return 'amex';\n    } else if (/^6(?:011|5)/.test(cardNumberCleaned)) {\n        return 'discover';\n    } else if (/^35(2[89]|[3-8][0-9])/.test(cardNumberCleaned)) {\n        return 'jcb';\n    } else if (/^220[0-4]/.test(cardNumberCleaned) || /^2[1-9]/.test(cardNumberCleaned)) {\n        return 'mir';\n    } else {\n        return 'unknown';\n    }\n}","import isValidCreditCardNumber from './isValidCreditCardNumber';\nimport getCardType from './getCardType';\n\ndocument.querySelector('.card-number-form').addEventListener('submit', e => {\n    e.preventDefault();\n\n    const cardNumber = document.querySelector('.card-number-input').value;\n    const resultElement = document.querySelector('.result');\n\n    if (isValidCreditCardNumber(cardNumber)) {\n        const cardType = getCardType(cardNumber);\n        resultElement.textContent = `Card is valid and this credit card's issuer is ${cardType}`;\n        resultElement.className = `result ${cardType}`;\n\n        document.querySelectorAll('.card').forEach(card => {\n            card.classList.remove('selected');\n        });\n    \n        if (cardType !== 'unknown') {\n            document.querySelector(`.card.${cardType}`).classList.add('selected');\n        }\n    } else {\n        resultElement.textContent = 'Card is not valid';\n    }\n});","import './css/style.css';\nimport './js/app';"],"names":["isValidCreditCardNumber","cardNumber","cleanedNumber","replace","test","digits","split","reverse","sum","i","length","digit","getCardType","cardNumberCleaned","document","querySelector","addEventListener","e","preventDefault","value","resultElement","cardType","textContent","className","querySelectorAll","forEach","card","classList","remove","add"],"sourceRoot":""}