{"version":3,"file":"main.js","mappings":"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","sources":["webpack://tests-credit-card-validator/./src/js/isValidCreditCardNumber.js","webpack://tests-credit-card-validator/./src/js/getCardType.js","webpack://tests-credit-card-validator/./src/js/handleFormSubmit.js","webpack://tests-credit-card-validator/./src/js/widget.js","webpack://tests-credit-card-validator/./src/js/app.js","webpack://tests-credit-card-validator/./src/index.js"],"sourcesContent":["export function isValidCreditCardNumber(cardNumber) {\n    const cleanedNumber = cardNumber.replace(/\\D/g, '');\n    \n    if (!/^\\d+$/.test(cleanedNumber)) {\n        return false; \n    }\n\n    const digits = cleanedNumber.split('').reverse();\n    let sum = 0;\n\n    for (let i = 0; i < digits.length; i++) {\n        let digit = +digits[i];\n\n        if (i % 2) {\n            digit *= 2;\n\n            if (digit > 9) {\n                digit -= 9;\n            }\n        };\n\n        sum += digit;\n    }\n\n    return (sum % 10 === 0);\n}","export function getCardType(cardNumber) {\n    const cardNumberCleaned = cardNumber.replace(/\\D/g, '');\n\n    if (/^4/.test(cardNumberCleaned)) {\n        return 'visa';\n    } else if (/^5[1-5]/.test(cardNumberCleaned)) {\n        return 'master';\n    } else if (/^3[47]/.test(cardNumberCleaned)) {\n        return 'amex';\n    } else if (/^6(?:011|5)/.test(cardNumberCleaned)) {\n        return 'discover';\n    } else if (/^35(2[89]|[3-8][0-9])/.test(cardNumberCleaned)) {\n        return 'jcb';\n    } else if (/^220[0-4]/.test(cardNumberCleaned) || /^2[1-9]/.test(cardNumberCleaned)) {\n        return 'mir';\n    } else {\n        return 'unknown';\n    }\n}","import { isValidCreditCardNumber } from './isValidCreditCardNumber';\nimport { getCardType } from './getCardType';\n\nexport function handleFormSubmit(e) {\n    e.preventDefault();\n\n    const cardNumber = document.querySelector('.card-number-input').value;\n    const resultElement = document.querySelector('.result');\n\n    if (isValidCreditCardNumber(cardNumber)) {\n        const cardType = getCardType(cardNumber);\n        resultElement.textContent = `Card is valid and this credit card's issuer is ${cardType}`;\n        resultElement.className = `result ${cardType}`;\n\n        document.querySelectorAll('.card').forEach(card => {\n            card.classList.remove('selected');\n        });\n    \n        if (cardType !== 'unknown') {\n            document.querySelector(`.card.${cardType}`).classList.add('selected');\n        }\n    } else {\n        resultElement.textContent = 'Card is not valid';\n    }\n}","import { handleFormSubmit } from './handleFormSubmit';\n\nexport class CardFormWidget {\n    constructor(parentEl) {\n        this.parentEl = parentEl;\n    }\n\n    static get markup() {\n        return `\n        <div class=\"credit-cards\">\n            <h3 class=\"title\">Check your credit card number</h3>\n            <ul class=\"cards-list\">\n                <li class=\"card-item\">\n                    <span class=\"card visa\">Visa</span>\n                </li>\n                <li class=\"card-item\">\n                    <span class=\"card master\">Master</span>\n                </li>\n                <li class=\"card-item\">\n                    <span class=\"card amex\">Amex</span>\n                </li>\n                <li class=\"card-item\">\n                    <span class=\"card discover\">Discover</span>\n                </li>\n                <li class=\"card-item\">\n                    <span class=\"card jcb\">JCB</span>\n                </li>\n                <li class=\"card-item\">\n                    <span class=\"card mir\">Mir</span>\n                </li>\n            </ul>\n            <form class=\"card-number-form\">\n                <input class=\"card-number-input\" type=\"text\" placeholder=\"Credit card number\">\n                <button type=\"submit\" class=\"btn\">Click to Validate</button>\n            </form>\n            <div class=\"result\"></div>\n        </div>\n         `;\n    }\n\n    static get selector() {\n        return '.card-number-form';\n    }\n\n    static get input() {\n        return '.card-number-input';\n    }\n\n    static get submit() {\n        return '.btn';\n    }\n\n    bindToDOM() {\n        this.parentEl.innerHTML = CardFormWidget.markup;\n\n        this.element = this.parentEl.querySelector(CardFormWidget.selector);\n        this.input = this.element.querySelector(CardFormWidget.input);\n        this.submit= this.element.querySelector(CardFormWidget.submit);\n\n        this.element.addEventListener('submit', handleFormSubmit.bind(this));\n    }\n}\n","import { handleFormSubmit } from './handleFormSubmit';\nimport { CardFormWidget } from './widget';\n\nconst container = document.querySelector('.container');\nconst form = new CardFormWidget(container);\n\nform.bindToDOM();\n\ndocument.querySelector('.card-number-form').addEventListener('submit', handleFormSubmit);","import './css/style.css';\nimport './js/app';"],"names":["isValidCreditCardNumber","cardNumber","cleanedNumber","replace","test","digits","split","reverse","sum","i","length","digit","getCardType","cardNumberCleaned","handleFormSubmit","e","preventDefault","document","querySelector","value","resultElement","cardType","textContent","className","querySelectorAll","forEach","card","classList","remove","add","CardFormWidget","constructor","parentEl","markup","selector","input","submit","bindToDOM","innerHTML","element","addEventListener","bind","container","form"],"sourceRoot":""}